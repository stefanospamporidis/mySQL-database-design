-- MySQL Script generated by MySQL Workbench
-- Sun Mar 31 19:30:13 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`actor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`actor` (
  `actors_id` INT NOT NULL,
  `First_name` VARCHAR(45) NOT NULL,
  `Last_name` VARCHAR(45) NOT NULL,
  `Birthday` DATETIME NOT NULL,
  `gender` ENUM('FEMALE', 'MALE') NOT NULL,
  `nationality` VARCHAR(45) NOT NULL,
  `category` ENUM('graduates', 'self-taught', 'working students') NOT NULL,
  `married_to` INT NULL,
  `manager_id` INT NULL,
  `actors_actors_id` INT NOT NULL,
  `self_manager` ENUM('true', 'false') NOT NULL,
  PRIMARY KEY (`actors_id`),
  UNIQUE INDEX `actors_id_UNIQUE` (`actors_id` ASC) VISIBLE,
  INDEX `married_to_idx` (`married_to` ASC) VISIBLE,
  CONSTRAINT `married_to`
    FOREIGN KEY (`married_to`)
    REFERENCES `mydb`.`actor` (`actors_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`manager`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`manager` (
  `ΑΦΜ` INT NOT NULL,
  `First_name` VARCHAR(45) NOT NULL,
  `Last_namel` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ΑΦΜ`),
  UNIQUE INDEX `ΑΦΜ_UNIQUE` (`ΑΦΜ` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`contract`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`contract` (
  `contract_id` INT NOT NULL AUTO_INCREMENT,
  `Date` DATETIME NOT NULL,
  `Duration` INT NOT NULL,
  `actor_id` INT NOT NULL,
  `actors_payment` INT NOT NULL,
  `manager_id` INT NULL,
  `managers_payment` INT NULL,
  PRIMARY KEY (`contract_id`),
  UNIQUE INDEX `contract_id_UNIQUE` (`contract_id` ASC) VISIBLE,
  INDEX `actor_id_idx` (`actor_id` ASC) VISIBLE,
  INDEX `manager_id_idx` (`manager_id` ASC) VISIBLE,
  CONSTRAINT `actor_id`
    FOREIGN KEY (`actor_id`)
    REFERENCES `mydb`.`actor` (`actors_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `manager_id`
    FOREIGN KEY (`manager_id`)
    REFERENCES `mydb`.`manager` (`ΑΦΜ`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`role` (
  `role_id` INT NOT NULL,
  `category` INT NOT NULL,
  `description` LONGTEXT NOT NULL,
  PRIMARY KEY (`role_id`),
  UNIQUE INDEX `role_id_UNIQUE` (`role_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`directors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`directors` (
  `directors_id` INT NOT NULL,
  `First_name` VARCHAR(45) NOT NULL,
  `Last_name` VARCHAR(45) NOT NULL,
  `Birthday` DATETIME NOT NULL,
  `gender` ENUM('Male', 'Female') NOT NULL,
  `nationality` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`directors_id`),
  UNIQUE INDEX `directors_id_UNIQUE` (`directors_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`screenwriter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`screenwriter` (
  `screenwriter_id` INT NOT NULL,
  `First_name` VARCHAR(45) NOT NULL,
  `Last_name` VARCHAR(45) NOT NULL,
  `Birthday` DATETIME NOT NULL,
  `gender` ENUM('Male', 'Female') NOT NULL,
  `nationality` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`screenwriter_id`),
  UNIQUE INDEX `directors_id_UNIQUE` (`screenwriter_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`other_specialties`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`other_specialties` (
  `other_specialties_id` INT NOT NULL,
  `category` VARCHAR(45) NOT NULL,
  `First_name` VARCHAR(45) NOT NULL,
  `age` INT NOT NULL,
  `nationality` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`other_specialties_id`),
  UNIQUE INDEX `other_specialties_id_UNIQUE` (`other_specialties_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`participants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`participants` (
  `participants_id` INT NOT NULL,
  `actor_id` INT NULL,
  `director_id` INT NULL,
  `screenwriter_id` INT NULL,
  `other_specialties_id` INT NULL,
  PRIMARY KEY (`participants_id`),
  UNIQUE INDEX `participants_id_UNIQUE` (`participants_id` ASC) VISIBLE,
  INDEX `actor_idx` (`actor_id` ASC) VISIBLE,
  INDEX `director_idx` (`director_id` ASC) VISIBLE,
  INDEX `screenwriter_idx` (`screenwriter_id` ASC) VISIBLE,
  INDEX `other_specialties_idx` (`other_specialties_id` ASC) VISIBLE,
  CONSTRAINT `actor`
    FOREIGN KEY (`actor_id`)
    REFERENCES `mydb`.`actor` (`actors_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `director`
    FOREIGN KEY (`director_id`)
    REFERENCES `mydb`.`directors` (`directors_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `screenwriter`
    FOREIGN KEY (`screenwriter_id`)
    REFERENCES `mydb`.`screenwriter` (`screenwriter_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `other_specialties`
    FOREIGN KEY (`other_specialties_id`)
    REFERENCES `mydb`.`other_specialties` (`other_specialties_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`social_media_members`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`social_media_members` (
  `members_id` INT NOT NULL,
  `participants_id` INT NULL,
  PRIMARY KEY (`members_id`),
  INDEX `participants_idx` (`participants_id` ASC) VISIBLE,
  CONSTRAINT `participants`
    FOREIGN KEY (`participants_id`)
    REFERENCES `mydb`.`participants` (`participants_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`photos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`photos` (
  `photo_id` INT NOT NULL,
  `descriptiom` VARCHAR(45) NOT NULL,
  `members_id` INT NOT NULL,
  PRIMARY KEY (`photo_id`),
  INDEX `members_id_idx` (`members_id` ASC) VISIBLE,
  CONSTRAINT `members_id`
    FOREIGN KEY (`members_id`)
    REFERENCES `mydb`.`social_media_members` (`members_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`movies_social_media`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`movies_social_media` (
  `social_media_id` INT NOT NULL,
  `category(facebook,instagram,etc)` VARCHAR(45) NOT NULL,
  `photo_id` INT NOT NULL,
  `members_id` INT NOT NULL,
  PRIMARY KEY (`social_media_id`),
  INDEX `photo_id_idx` (`photo_id` ASC) VISIBLE,
  INDEX `members_id_idx` (`members_id` ASC) VISIBLE,
  CONSTRAINT `photo_id`
    FOREIGN KEY (`photo_id`)
    REFERENCES `mydb`.`photos` (`photo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `members_id`
    FOREIGN KEY (`members_id`)
    REFERENCES `mydb`.`social_media_members` (`members_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`acquaintance(friends in social media)`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`acquaintance(friends in social media)` (
  `acquaintance_id` INT NOT NULL AUTO_INCREMENT,
  `category` VARCHAR(45) NOT NULL,
  `members_id` INT NOT NULL,
  PRIMARY KEY (`acquaintance_id`),
  INDEX `members_id_idx` (`members_id` ASC) VISIBLE,
  CONSTRAINT `members_id`
    FOREIGN KEY (`members_id`)
    REFERENCES `mydb`.`social_media_members` (`members_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`directors_has_screenwriter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`directors_has_screenwriter` (
  `director_has_screenwriter_id` INT NOT NULL,
  `directors_directors_id` INT NOT NULL,
  `screenwriter_screenwriter_id` INT NOT NULL,
  INDEX `fk_directors_has_screenwriter_screenwriter1_idx` (`screenwriter_screenwriter_id` ASC) VISIBLE,
  INDEX `fk_directors_has_screenwriter_directors1_idx` (`directors_directors_id` ASC) VISIBLE,
  PRIMARY KEY (`director_has_screenwriter_id`),
  CONSTRAINT `fk_directors_has_screenwriter_directors1`
    FOREIGN KEY (`directors_directors_id`)
    REFERENCES `mydb`.`directors` (`directors_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_directors_has_screenwriter_screenwriter1`
    FOREIGN KEY (`screenwriter_screenwriter_id`)
    REFERENCES `mydb`.`screenwriter` (`screenwriter_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`production company`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`production company` (
  `production company id` INT NOT NULL,
  `name` VARCHAR(60) NOT NULL,
  `site` VARCHAR(100) NOT NULL,
  `phone` INT NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `director_has_screenwriter_id` INT NOT NULL,
  `without_studio` INT NULL,
  PRIMARY KEY (`production company id`),
  UNIQUE INDEX `production company id_UNIQUE` (`production company id` ASC) VISIBLE,
  INDEX `directors_has_screenwriter_id_idx` (`director_has_screenwriter_id` ASC) VISIBLE,
  INDEX `without_studio_idx` (`without_studio` ASC) VISIBLE,
  CONSTRAINT `director_has_screenwriter_id`
    FOREIGN KEY (`director_has_screenwriter_id`)
    REFERENCES `mydb`.`directors_has_screenwriter` (`director_has_screenwriter_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `without_studio`
    FOREIGN KEY (`without_studio`)
    REFERENCES `mydb`.`production company` (`production company id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`movies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`movies` (
  `movies_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(100) NOT NULL,
  `date` DATETIME NOT NULL,
  `production company` INT NOT NULL,
  `nationality_pc` VARCHAR(60) NOT NULL,
  `duration(minutes)` INT NOT NULL,
  `genre` ENUM('comedy', 'drama', 'action', 'adventure', 'sci-fi', 'rom-com', 'musical', 'horror', 'mystery', 'documentary') NOT NULL,
  `colour` ENUM('black n white', 'coloured') NOT NULL,
  `participants_id` INT NOT NULL,
  `role_id` INT NULL,
  `social_media_id` INT NOT NULL,
  `acquaintance_idl` INT NOT NULL,
  PRIMARY KEY (`movies_id`),
  UNIQUE INDEX `movies_id_UNIQUE` (`movies_id` ASC) VISIBLE,
  INDEX `role_id_idx` (`role_id` ASC) VISIBLE,
  INDEX `social_media_id_idx` (`social_media_id` ASC) VISIBLE,
  INDEX `ackuaintance_id_idx` (`acquaintance_idl` ASC) VISIBLE,
  INDEX `participants_id_idx` (`participants_id` ASC) VISIBLE,
  INDEX `production_company_idx` (`production company` ASC) VISIBLE,
  CONSTRAINT `role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `mydb`.`role` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `participants_id`
    FOREIGN KEY (`participants_id`)
    REFERENCES `mydb`.`participants` (`participants_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `social_media_id`
    FOREIGN KEY (`social_media_id`)
    REFERENCES `mydb`.`movies_social_media` (`social_media_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ackuaintance_id`
    FOREIGN KEY (`acquaintance_idl`)
    REFERENCES `mydb`.`acquaintance(friends in social media)` (`acquaintance_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `production_company`
    FOREIGN KEY (`production company`)
    REFERENCES `mydb`.`production company` (`production company id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '																				';


-- -----------------------------------------------------
-- Table `mydb`.`actor_has_manager`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`actor_has_manager` (
  `actors_actors_id` INT NOT NULL,
  `managers_ΑΦΜ` INT NULL,
  INDEX `fk_actors_has_managers_managers1_idx` (`managers_ΑΦΜ` ASC) VISIBLE,
  INDEX `fk_actors_has_managers_actors_idx` (`actors_actors_id` ASC) VISIBLE,
  PRIMARY KEY (`actors_actors_id`, `managers_ΑΦΜ`),
  CONSTRAINT `fk_actors_has_managers_actors`
    FOREIGN KEY (`actors_actors_id`)
    REFERENCES `mydb`.`actor` (`actors_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_actors_has_managers_managers1`
    FOREIGN KEY (`managers_ΑΦΜ`)
    REFERENCES `mydb`.`manager` (`ΑΦΜ`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`movies_has_sequel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`movies_has_sequel` (
  `movies_movies_id` INT NOT NULL,
  `production company_production company id` INT NULL,
  INDEX `fk_movies_has_production company_production company1_idx` (`production company_production company id` ASC) VISIBLE,
  INDEX `fk_movies_has_production company_movies1_idx` (`movies_movies_id` ASC) VISIBLE,
  PRIMARY KEY (`movies_movies_id`, `production company_production company id`),
  CONSTRAINT `fk_movies_has_production company_movies1`
    FOREIGN KEY (`movies_movies_id`)
    REFERENCES `mydb`.`movies` (`movies_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movies_has_production company_production company1`
    FOREIGN KEY (`production company_production company id`)
    REFERENCES `mydb`.`production company` (`production company id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`studio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`studio` (
  `studio id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  `location` VARCHAR(100) NOT NULL,
  `facilities area(m*m)` INT NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`studio id`),
  UNIQUE INDEX `studio id_UNIQUE` (`studio id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`production company_has_studio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`production company_has_studio` (
  `production company_production company id` INT NOT NULL,
  `studio_studio id` INT NULL,
  PRIMARY KEY (`studio_studio id`, `production company_production company id`),
  INDEX `fk_production company_has_studio_studio1_idx` (`studio_studio id` ASC) VISIBLE,
  INDEX `fk_production company_has_studio_production company1_idx` (`production company_production company id` ASC) VISIBLE,
  CONSTRAINT `fk_production company_has_studio_production company1`
    FOREIGN KEY (`production company_production company id`)
    REFERENCES `mydb`.`production company` (`production company id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_production company_has_studio_studio1`
    FOREIGN KEY (`studio_studio id`)
    REFERENCES `mydb`.`studio` (`studio id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`oscar_awards_categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`oscar_awards_categories` (
  `oscar_awards_categories_id` INT NOT NULL,
  `category` ENUM('1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25') NOT NULL,
  PRIMARY KEY (`oscar_awards_categories_id`),
  UNIQUE INDEX `category_UNIQUE` (`category` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`nominees_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`nominees_history` (
  `nominees_history_id` INT NOT NULL,
  `participant_id` INT NOT NULL,
  `movie_id` INT NOT NULL,
  `oscar_category_id` INT NOT NULL,
  PRIMARY KEY (`nominees_history_id`),
  UNIQUE INDEX `oscar_category_id_UNIQUE` (`oscar_category_id` ASC) VISIBLE,
  INDEX `movie_id_idx` (`movie_id` ASC) VISIBLE,
  CONSTRAINT `oscar_category`
    FOREIGN KEY (`oscar_category_id`)
    REFERENCES `mydb`.`oscar_awards_categories` (`oscar_awards_categories_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `movie_id`
    FOREIGN KEY (`movie_id`)
    REFERENCES `mydb`.`movies` (`movies_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Academy_applications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Academy_applications` (
  `candidate_member_id` INT NOT NULL,
  `date` DATE NOT NULL,
  `acceptance` INT NULL,
  `history_id` INT NOT NULL,
  `Academy_member_id1` INT NOT NULL,
  `Academy_member_id2` INT NOT NULL,
  PRIMARY KEY (`candidate_member_id`),
  INDEX `acceptance_idx` (`acceptance` ASC) VISIBLE,
  INDEX `member1_idx` (`Academy_member_id1` ASC) VISIBLE,
  INDEX `member2_idx` (`Academy_member_id2` ASC) VISIBLE,
  INDEX `history_idx` (`history_id` ASC) VISIBLE,
  CONSTRAINT `acceptance`
    FOREIGN KEY (`acceptance`)
    REFERENCES `mydb`.`Academy_applications` (`candidate_member_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `candidate`
    FOREIGN KEY (`candidate_member_id`)
    REFERENCES `mydb`.`participants` (`participants_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `member1`
    FOREIGN KEY (`Academy_member_id1`)
    REFERENCES `mydb`.`Academy(members)` (`Academy(members)_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `member2`
    FOREIGN KEY (`Academy_member_id2`)
    REFERENCES `mydb`.`Academy(members)` (`Academy(members)_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `history`
    FOREIGN KEY (`history_id`)
    REFERENCES `mydb`.`nominees_history` (`nominees_history_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`commission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`commission` (
  `commission_id` INT NOT NULL,
  `category` VARCHAR(45) NOT NULL,
  `application_id` INT NOT NULL,
  `commission_acceptance` INT NULL,
  PRIMARY KEY (`commission_id`),
  INDEX `administrative_acceptance_idx` (`commission_acceptance` ASC) VISIBLE,
  CONSTRAINT `administrative_acceptance`
    FOREIGN KEY (`commission_acceptance`)
    REFERENCES `mydb`.`Academy_applications` (`acceptance`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`administrative_council`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`administrative_council` (
  `specialty_president_id` INT NOT NULL,
  `service` INT NOT NULL,
  `specialty` VARCHAR(45) NOT NULL,
  `president_id` INT NOT NULL,
  `administrative_acceptance` INT NULL,
  `acceptance_date` DATE NOT NULL,
  UNIQUE INDEX `presidents_id_UNIQUE` (`specialty_president_id` ASC) VISIBLE,
  UNIQUE INDEX `president_id_UNIQUE` (`president_id` ASC) VISIBLE,
  PRIMARY KEY (`specialty_president_id`, `president_id`),
  INDEX `administrative_acceptance_idx` (`administrative_acceptance` ASC) VISIBLE,
  CONSTRAINT `presidents_id`
    FOREIGN KEY (`president_id`)
    REFERENCES `mydb`.`Academy(members)` (`Academy(members)_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `specialty_president_id`
    FOREIGN KEY (`specialty_president_id`)
    REFERENCES `mydb`.`Academy(members)` (`Academy(members)_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `administrative_acceptance`
    FOREIGN KEY (`administrative_acceptance`)
    REFERENCES `mydb`.`commission` (`commission_acceptance`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Academy(members)`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Academy(members)` (
  `Academy(members)_id` INT NOT NULL AUTO_INCREMENT,
  `First_name` VARCHAR(45) NOT NULL,
  `Last_name` VARCHAR(45) NOT NULL,
  `specialty` VARCHAR(45) NOT NULL,
  `expiration_date` DATETIME NOT NULL,
  `starting_date` DATE NOT NULL,
  PRIMARY KEY (`Academy(members)_id`),
  UNIQUE INDEX `Academy(members)_id_UNIQUE` (`Academy(members)_id` ASC) VISIBLE,
  CONSTRAINT `member_id`
    FOREIGN KEY (`Academy(members)_id`)
    REFERENCES `mydb`.`administrative_council` (`administrative_acceptance`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `academy_members`
    FOREIGN KEY (`Academy(members)_id`)
    REFERENCES `mydb`.`participants` (`participants_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`oscar_awards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`oscar_awards` (
  `oscar_awards_id` INT NOT NULL,
  `category_id` INT NOT NULL,
  `winner_id` INT NOT NULL,
  `year` DATE NOT NULL,
  PRIMARY KEY (`oscar_awards_id`),
  UNIQUE INDEX `category_id_UNIQUE` (`category_id` ASC) VISIBLE,
  INDEX `winner_idx` (`winner_id` ASC) VISIBLE,
  CONSTRAINT `category_id`
    FOREIGN KEY (`category_id`)
    REFERENCES `mydb`.`oscar_awards_categories` (`oscar_awards_categories_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `winner`
    FOREIGN KEY (`winner_id`)
    REFERENCES `mydb`.`participants` (`participants_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `winner`
    FOREIGN KEY (`winner_id`)
    REFERENCES `mydb`.`movies` (`movies_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `category`
    FOREIGN KEY (`category_id`)
    REFERENCES `mydb`.`role` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`special_commission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`special_commission` (
  `special_commission_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `academy_member` INT NOT NULL,
  PRIMARY KEY (`special_commission_id`),
  INDEX `academy_member_idx` (`academy_member` ASC) VISIBLE,
  CONSTRAINT `academy_member`
    FOREIGN KEY (`academy_member`)
    REFERENCES `mydb`.`Academy(members)` (`Academy(members)_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`voting_p1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`voting_p1` (
  `movie_id` INT NOT NULL,
  `category_id` INT NOT NULL,
  `vote_id` INT NOT NULL,
  PRIMARY KEY (`movie_id`),
  UNIQUE INDEX `category_UNIQUE` (`category_id` ASC) VISIBLE,
  INDEX `vote_id_idx` (`vote_id` ASC) VISIBLE,
  CONSTRAINT `movie_id`
    FOREIGN KEY (`movie_id`)
    REFERENCES `mydb`.`movies` (`movies_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `category_id`
    FOREIGN KEY (`category_id`)
    REFERENCES `mydb`.`oscar_awards_categories` (`oscar_awards_categories_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `vote_participants`
    FOREIGN KEY (`vote_id`)
    REFERENCES `mydb`.`participants` (`participants_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `vote_commission`
    FOREIGN KEY (`vote_id`)
    REFERENCES `mydb`.`special_commission` (`special_commission_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`voting_p2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`voting_p2` (
  `movie_id` INT NOT NULL,
  `category_id` INT NOT NULL,
  `vote_id` INT NOT NULL,
  PRIMARY KEY (`movie_id`),
  UNIQUE INDEX `category_id_UNIQUE` (`category_id` ASC) VISIBLE,
  INDEX `vote_id_idx` (`vote_id` ASC) VISIBLE,
  CONSTRAINT `movie_id`
    FOREIGN KEY (`movie_id`)
    REFERENCES `mydb`.`oscar_awards` (`oscar_awards_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `movie_id`
    FOREIGN KEY (`movie_id`)
    REFERENCES `mydb`.`voting_p1` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `category_id`
    FOREIGN KEY (`category_id`)
    REFERENCES `mydb`.`oscar_awards_categories` (`oscar_awards_categories_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `vote_participants`
    FOREIGN KEY (`vote_id`)
    REFERENCES `mydb`.`participants` (`participants_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `vote_commission`
    FOREIGN KEY (`vote_id`)
    REFERENCES `mydb`.`special_commission` (`special_commission_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`actors_movie_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`actors_movie_history` (
  `actors_movies_history_id` INT NOT NULL,
  `actor_id` INT NOT NULL,
  `movie_id` INT NOT NULL,
  `filming_start` DATE NOT NULL,
  `filming_end` DATE NOT NULL,
  `current_movie` INT NULL,
  PRIMARY KEY (`actors_movies_history_id`),
  INDEX `actor_idx` (`actor_id` ASC) VISIBLE,
  INDEX `movie_idx` (`movie_id` ASC) VISIBLE,
  INDEX `current_movie_idx` (`current_movie` ASC) VISIBLE,
  CONSTRAINT `actor`
    FOREIGN KEY (`actor_id`)
    REFERENCES `mydb`.`actor` (`actors_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `movie`
    FOREIGN KEY (`movie_id`)
    REFERENCES `mydb`.`movies` (`movies_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `current_movie`
    FOREIGN KEY (`current_movie`)
    REFERENCES `mydb`.`movies` (`movies_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`best_movie_voting`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`best_movie_voting` (
  `best_movie_voting` INT NOT NULL,
  `movie_id` INT NOT NULL,
  `vote_am` INT NOT NULL,
  PRIMARY KEY (`best_movie_voting`),
  INDEX `movie_idx` (`movie_id` ASC) VISIBLE,
  INDEX `vote_am_idx` (`vote_am` ASC) VISIBLE,
  CONSTRAINT `movie`
    FOREIGN KEY (`movie_id`)
    REFERENCES `mydb`.`movies` (`movies_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `vote_am`
    FOREIGN KEY (`vote_am`)
    REFERENCES `mydb`.`Academy(members)` (`Academy(members)_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
